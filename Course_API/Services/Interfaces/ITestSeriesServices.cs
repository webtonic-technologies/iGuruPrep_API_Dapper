using Course_API.DTOs.Requests;
using Course_API.DTOs.Response;
using Course_API.DTOs.ServiceResponse;
using Course_API.Models;
namespace Course_API.Services.Interfaces
{
    public interface ITestSeriesServices
    {
        Task<ServiceResponse<int>> AddUpdateTestSeries(TestSeriesDTO request);
        Task<ServiceResponse<TestSeriesResponseDTO>> GetTestSeriesById(int TestSeriesId);
        Task<ServiceResponse<string>> TestSeriesContentIndexMapping(ContentIndexRequest request, int TestSeriesId);
        Task<ServiceResponse<List<QuestionResponseDTO>>> GetQuestionsList(GetAllQuestionListRequest request);
        Task<ServiceResponse<string>> TestSeriesQuestionsMapping(List<TestSeriesQuestions> request, int TestSeriesId, int sectionId);
        Task<ServiceResponse<string>> TestSeriesQuestionSectionMapping(List<QuestionSection> request, int TestSeriesId);
        Task<ServiceResponse<string>> TestSeriesInstructionsMapping(TestSeriesInstructions request, int TestSeriesId);
        Task<ServiceResponse<List<ContentIndexResponses>>> GetSyllabusDetailsBySubject(SyllabusDetailsRequest request);
        Task<ServiceResponse<List<TestSeriesResponseDTO>>> GetTestSeriesList(TestSeriesListRequest request);
        Task<ServiceResponse<List<QuestionResponseDTO>>> GetAutoGeneratedQuestionList(QuestionListRequest request);
        Task<ServiceResponse<List<TestSeriesSectionDTO>>> GetSectionsByTestSeriesId(int testSeriesId);
        Task<ServiceResponse<List<QuestionTypeDTO>>> GetQuestionTypesBySectionId(int sectionId);
        Task<ServiceResponse<List<DifficultyLevelDTO>>> GetDifficultyLevelsBySectionId(int sectionId);
        Task<ServiceResponse<List<ChapterDTO>>> GetTestSeriesContentIndexHierarchy(int testSeriesId);
        Task<ServiceResponse<string>> AssignTestSeries(TestseriesProfilerRequest request);
        Task<ServiceResponse<string>>UpdateQuestion(QuestionDTO request);
        Task<ServiceResponse<byte[]>> GenerateExcelFile(DownExcelRequest request);
        Task<ServiceResponse<string>> AddUpdateTestSeriesDateAndTime(TestSeriesDateAndTimeRequest request);
        Task<ServiceResponse<string>> UploadQuestionsFromExcel(IFormFile file, int testSeriesId, int EmployeeId);
        Task<ServiceResponse<string>> TestSeriesRejectedQuestionRemarks(RejectedQuestionRemark request);
        Task<ServiceResponse<string>> ApproveRejectedQuestion(int testSeriesId, int QuestionId);
    }
}
